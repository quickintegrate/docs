"use strict";(self.webpackChunkuser_documentation=self.webpackChunkuser_documentation||[]).push([[2852],{488:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>p,frontMatter:()=>i,metadata:()=>l,toc:()=>g});var r=t(5893),o=t(1151),s=t(4996);const i={},c=void 0,l={id:"Core Development/Triggers/DB Event",title:"DB Event",description:"DB trigger is available to get the records from DB for newly created records.",source:"@site/docs/Core Development/Triggers/DB Event.md",sourceDirName:"Core Development/Triggers",slug:"/Core Development/Triggers/DB Event",permalink:"/docs/docs/Core Development/Triggers/DB Event",draft:!1,unlisted:!1,editUrl:"https://github.com/quickintegrate/docs/tree/main/Core Development/Triggers/DB Event.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Triggers",permalink:"/docs/docs/Core Development/Triggers/"},next:{title:"File",permalink:"/docs/docs/Core Development/Triggers/File"}},d={},g=[{value:"DB Event Trigger",id:"db-event-trigger",level:4}];function a(e){const n={blockquote:"blockquote",h4:"h4",p:"p",strong:"strong",...(0,o.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"DB trigger"})," is available to get the records from DB for newly created records."]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"When we Login to Quick Integration Platform to get started."}),"\n"]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:["Click on ",(0,r.jsx)(n.strong,{children:"Manage"})," Option >> ",(0,r.jsx)(n.strong,{children:"Projects"})," >> ",(0,r.jsx)(n.strong,{children:"Create"})," to create the new project"]}),"\n"]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:["Go to ",(0,r.jsx)(n.strong,{children:"DEVELOP"})," >> ",(0,r.jsx)(n.strong,{children:"Functionality"})," API"]}),"\n"]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"Select relevant project and create services in that project"}),"\n"]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:["Select ",(0,r.jsx)(n.strong,{children:"DB Event"})," triggers in drowndown while creating the flow"]}),"\n"]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:["Once service name is provided, canvas will show up with selected DB ",(0,r.jsx)(n.strong,{children:"Event"})," Trigger"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"db-event-trigger",children:"DB Event Trigger"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)("img",{src:(0,s.Z)("/img/Core Development/DB_event_trigger.png")}),";"]}),"\n",(0,r.jsx)(n.p,{children:"In DB configurations channelName, listenerDelay, listnerTable and datasource-name needs to be defined."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)("img",{src:(0,s.Z)("/img/Core Development/Trigger_config/DC_event_config1.png")}),";"]})]})}function p(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>c,a:()=>i});var r=t(7294);const o={},s=r.createContext(o);function i(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);