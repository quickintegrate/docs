"use strict";(self.webpackChunkuser_documentation=self.webpackChunkuser_documentation||[]).push([[654],{6750:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>d,toc:()=>p});var r=t(5893),s=t(1151),o=t(4996);const i={sidebar_position:4},a="PAYLOAD",d={id:"Core Development/Transformers/PAYLOAD",title:"PAYLOAD",description:"It resembles an API response but includes an output. We generate customized data through data mapping, employing it as input for subsequent nodes.",source:"@site/docs/Core Development/Transformers/PAYLOAD.md",sourceDirName:"Core Development/Transformers",slug:"/Core Development/Transformers/PAYLOAD",permalink:"/Core Development/Transformers/PAYLOAD",draft:!1,unlisted:!1,editUrl:"https://github.com/quickintegrate/docs/tree/main/Core Development/Transformers/PAYLOAD.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"APIRESPONSE",permalink:"/Core Development/Transformers/APIRESPONSE"},next:{title:"UTILITIES",permalink:"/Core Development/Transformers/UTILITIES"}},l={},p=[{value:"Step 1:",id:"step-1",level:4},{value:"Step 2:",id:"step-2",level:4},{value:"Configuring PAYLOAD",id:"configuring-payload",level:4},{value:"Step 3:",id:"step-3",level:4},{value:"Step 4:",id:"step-4",level:4},{value:"Step 5:",id:"step-5",level:4}];function c(e){const n={code:"code",h1:"h1",h4:"h4",p:"p",strong:"strong",...(0,s.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"payload",children:"PAYLOAD"}),"\n",(0,r.jsx)(n.p,{children:"It resembles an API response but includes an output. We generate customized data through data mapping, employing it as input for subsequent nodes."}),"\n",(0,r.jsx)(n.h4,{id:"step-1",children:"Step 1:"}),"\n",(0,r.jsxs)(n.p,{children:["Drag and drop the ",(0,r.jsx)(n.strong,{children:"PAYLOAD"}),"Components from the pallatte"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)("img",{src:(0,o.Z)("/img/Core Development/Transformer/payload.png")}),";"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)("img",{src:(0,o.Z)("/img/Core Development/Transformer/drag and drop Payload.png")}),";"]}),"\n",(0,r.jsx)(n.h4,{id:"step-2",children:"Step 2:"}),"\n",(0,r.jsx)(n.h4,{id:"configuring-payload",children:"Configuring PAYLOAD"}),"\n",(0,r.jsxs)(n.p,{children:["left click on PAYLOAD Components, you can define the ",(0,r.jsx)(n.strong,{children:"PAYLOAD"})," configration as given below:"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)("img",{src:(0,o.Z)("/img/Core Development/Transformer/payload config.png")}),";"]}),"\n",(0,r.jsxs)("table",{children:[(0,r.jsx)("thead",{children:(0,r.jsxs)("tr",{children:[(0,r.jsx)("th",{children:"Fields"}),(0,r.jsx)("th",{children:"Description"})]})}),(0,r.jsxs)("tbody",{children:[(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{children:"GEN"}),(0,r.jsx)("td",{children:"Get one field from the Input and mapped in another field of Output"})]}),(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{children:"TRANS"}),(0,r.jsx)("td",{children:"Transforms the Input value with the help of transformation functions"})]}),(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{children:"CN"}),(0,r.jsx)("td",{children:"Mapped the Input as it is Output body"})]}),(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{children:"OBJ"}),(0,r.jsx)("td",{children:"Mapped the Inputs to Object"})]}),(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{children:"AR"}),(0,r.jsx)("td",{children:"Mapped the Inputs to Array"})]})]})]}),"\n",(0,r.jsx)(n.h4,{id:"step-3",children:"Step 3:"}),"\n",(0,r.jsxs)(n.p,{children:["Provide the Output Variable\r\n",(0,r.jsx)(n.strong,{children:"The output variable stores the result of the transformation"})]}),"\n",(0,r.jsx)(n.h4,{id:"step-4",children:"Step 4:"}),"\n",(0,r.jsx)(n.p,{children:"Click on Add button and do the mapping as shown"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)("img",{src:(0,o.Z)("/img/Core Development/Transformer/Payload add button.png")}),";"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)("img",{src:(0,o.Z)("/img/Core Development/Transformer/Payload utils.png")}),";"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)("img",{src:(0,o.Z)("/img/Core Development/Transformer/Payload constant.png")}),";"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)("img",{src:(0,o.Z)("/img/Core Development/Transformer/Payload parameters.png")}),";"]}),"\n",(0,r.jsx)(n.p,{children:"and Save"}),"\n",(0,r.jsx)(n.h4,{id:"step-5",children:"Step 5:"}),"\n",(0,r.jsxs)(n.p,{children:["When we want to get a variable, from the pipeline, we use ",(0,r.jsx)(n.strong,{children:"$"})," sign as prefix followed by Variable name from in the pipeline. There can be nested get which is seperated by '.' Ex. ",(0,r.jsx)(n.strong,{children:"$Payload.key"})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"Note:- The variable Payload should be present in the pipeline before the calling"})})]})}function h(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>a,a:()=>i});var r=t(7294);const s={},o=r.createContext(s);function i(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);