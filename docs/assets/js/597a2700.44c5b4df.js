"use strict";(self.webpackChunkuser_documentation=self.webpackChunkuser_documentation||[]).push([[9050],{4397:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>p,frontMatter:()=>s,metadata:()=>l,toc:()=>a});var t=r(5893),i=r(1151),o=r(4996);const s={sidebar_position:4,slug:"file-connector",sidebar_label:"FILE"},c="File Connector",l={id:"Core Development/Connectors/FILE",title:"File Connector",description:"File Connector is used to handle Files folders on a local File systems",source:"@site/docs/Core Development/Connectors/FILE.md",sourceDirName:"Core Development/Connectors",slug:"/Core Development/Connectors/file-connector",permalink:"/Core Development/Connectors/file-connector",draft:!1,unlisted:!1,editUrl:"https://github.com/quickintegrate/docs/tree/main/Core Development/Connectors/FILE.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4,slug:"file-connector",sidebar_label:"FILE"},sidebar:"tutorialSidebar",previous:{title:"MQ",permalink:"/Core Development/Connectors/mq-connector"},next:{title:"FTP",permalink:"/Core Development/Connectors/ftp-connector"}},d={},a=[{value:"File-Connector features:",id:"file-connector-features",level:4},{value:"Configuring File Connector",id:"configuring-file-connector",level:3},{value:"Read File Operation",id:"read-file-operation",level:2},{value:"Write File Operation",id:"write-file-operation",level:2}];function h(e){const n={h1:"h1",h2:"h2",h3:"h3",h4:"h4",p:"p",strong:"strong",...(0,i.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"file-connector",children:"File Connector"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"File"})," Connector is used to handle ",(0,t.jsx)(n.strong,{children:"File"}),"s folders on a local ",(0,t.jsx)(n.strong,{children:"File"})," systems"]}),"\n",(0,t.jsx)(n.h4,{id:"file-connector-features",children:"File-Connector features:"}),"\n",(0,t.jsx)(n.p,{children:"Ability to read Files\r\nWriting Files to directory\r\nCopy and move Files\r\nLocking File so that no one can access File when the processing is going on\r\nListing the File and folders mentioned at directory path\r\nTrigger a flow when the new File created or modified\r\nOperation available:"}),"\n",(0,t.jsxs)(n.p,{children:["Copy\r\nCreate Directory\r\nDelete\r\nList\r\nMove\r\nOn New or Updated ",(0,t.jsx)(n.strong,{children:"File"}),"\r\nRead\r\nRename\r\nWrite"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)("img",{src:(0,o.Z)("/img/Connectors/FILE_Connector.png")}),";"]}),"\n",(0,t.jsxs)(n.p,{children:["Here are different instances demonstrating how to access the information within a file and create a file based on a specific structure. Each illustration includes a quickintegration application utilizing DataWeave for both reading and writing files.\r\n",(0,t.jsx)(n.strong,{children:"Read File Operation"}),"\r\n",(0,t.jsx)(n.strong,{children:"Write File Operation"})]}),"\n",(0,t.jsx)(n.h3,{id:"configuring-file-connector",children:"Configuring File Connector"}),"\n",(0,t.jsxs)(n.p,{children:["left click on connector, you can define the ",(0,t.jsx)(n.strong,{children:"File Connector"})," configration"]}),"\n",(0,t.jsx)(n.h2,{id:"read-file-operation",children:"Read File Operation"}),"\n",(0,t.jsx)(n.p,{children:"Define configuration for file connector to read a file by selecting operation as Read. Add destination in properties to poll the file.\r\nProvide the file name and select operation(MOVE or DELETE) to define further course of action for the file read from the destination."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)("img",{src:(0,o.Z)("/img/Connectors/Read_File_config.png")}),";"]}),"\n",(0,t.jsxs)("table",{children:[(0,t.jsx)("thead",{children:(0,t.jsxs)("tr",{children:[(0,t.jsx)("th",{children:"Fields"}),(0,t.jsx)("th",{children:"Description"}),(0,t.jsx)("th",{children:"Example"})]})}),(0,t.jsxs)("tbody",{children:[(0,t.jsxs)("tr",{children:[(0,t.jsx)("td",{children:"File Operation"}),(0,t.jsx)("td",{children:"Read/Write"}),(0,t.jsx)("td",{children:"Read"})]}),(0,t.jsxs)("tr",{children:[(0,t.jsx)("td",{children:"Connector"}),(0,t.jsxs)("td",{children:["Connector which is configured in connections properties",(0,t.jsx)("a",{href:"/Core Development/Property Config/Connection Properties/DataSource FILE",target:"_blank",children:" Please refer the link for instructions on creating the Connector"})]}),(0,t.jsx)("td",{children:"Successrecord"})]}),(0,t.jsxs)("tr",{children:[(0,t.jsx)("td",{children:"File Name"}),(0,t.jsx)("td",{children:"Name of the file to be processed"}),(0,t.jsx)("td",{children:"Contacts"})]}),(0,t.jsxs)("tr",{children:[(0,t.jsx)("td",{children:"File Type"}),(0,t.jsx)("td",{children:"Format of File"}),(0,t.jsx)("td",{children:"CSV"})]}),(0,t.jsxs)("tr",{children:[(0,t.jsx)("td",{children:"OutPut"}),(0,t.jsx)("td",{children:"Output"}),(0,t.jsx)("td",{children:"Rest_output"})]}),(0,t.jsxs)("tr",{children:[(0,t.jsx)("td",{children:"Operation"}),(0,t.jsx)("td",{children:"Operation of the file"}),(0,t.jsx)("td",{children:"Move"})]})]})]}),"\n",(0,t.jsx)(n.h2,{id:"write-file-operation",children:"Write File Operation"}),"\n",(0,t.jsx)(n.p,{children:"Define configuration for file connector to write a file by selecting operation as Write. Add destination in properties to write the file.\r\nProvide the file name and file type(XML, JSON etc.). Please select Append to continue write operation in the same file or select OverWrite to overwrite the file every time operation is performed."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)("img",{src:(0,o.Z)("/img/Connectors/Write_file_config2.png")}),";"]}),"\n",(0,t.jsxs)("table",{children:[(0,t.jsx)("thead",{children:(0,t.jsxs)("tr",{children:[(0,t.jsx)("th",{children:"Fields"}),(0,t.jsx)("th",{children:"Description"}),(0,t.jsx)("th",{children:"Example"})]})}),(0,t.jsxs)("tbody",{children:[(0,t.jsxs)("tr",{children:[(0,t.jsx)("td",{children:"File Operation"}),(0,t.jsx)("td",{children:"Read/Write"}),(0,t.jsx)("td",{children:"Write"})]}),(0,t.jsxs)("tr",{children:[(0,t.jsx)("td",{children:"Connector"}),(0,t.jsxs)("td",{children:["Connector which is configured in connections properties",(0,t.jsx)("a",{href:"/Core Development/Property Config/Connection Properties/DataSource FILE",target:"_blank",children:" Please refer the link for instructions on creating the Connector"})]}),(0,t.jsx)("td",{children:"Successrecords"})]}),(0,t.jsxs)("tr",{children:[(0,t.jsx)("td",{children:"File Name"}),(0,t.jsx)("td",{children:"Processed File"}),(0,t.jsx)("td",{children:"Contacts"})]}),(0,t.jsxs)("tr",{children:[(0,t.jsx)("td",{children:"File Type"}),(0,t.jsx)("td",{children:"Format of File"}),(0,t.jsx)("td",{children:"CSV"})]}),(0,t.jsxs)("tr",{children:[(0,t.jsx)("td",{children:"Input"}),(0,t.jsx)("td",{children:"Input"}),(0,t.jsx)("td",{children:"REQUEST_PAYLOAD"})]}),(0,t.jsxs)("tr",{children:[(0,t.jsx)("td",{children:"Append/OverWrite"}),(0,t.jsx)("td",{children:'Select "append" to add the request or choose "overwrite" to modify the request'}),(0,t.jsx)("td",{children:"OverWrite"})]})]})]})]})}function p(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},1151:(e,n,r)=>{r.d(n,{Z:()=>c,a:()=>s});var t=r(7294);const i={},o=t.createContext(i);function s(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);