"use strict";(self.webpackChunkuser_documentation=self.webpackChunkuser_documentation||[]).push([[8528],{6545:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>p,frontMatter:()=>i,metadata:()=>l,toc:()=>g});var t=r(5893),s=r(1151),o=r(4996);const i={},c=void 0,l={id:"Core Development/Triggers/REST",title:"REST",description:"Quickintegrate platform supports REST API development using HTTP trigger where configurations can be defined such as host, port, uri/query params etc.",source:"@site/docs/Core Development/Triggers/REST.md",sourceDirName:"Core Development/Triggers",slug:"/Core Development/Triggers/REST",permalink:"/docs/docs/Core Development/Triggers/REST",draft:!1,unlisted:!1,editUrl:"https://github.com/quickintegrate/docs/tree/main/Core Development/Triggers/REST.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Messaging",permalink:"/docs/docs/Core Development/Triggers/Messaging"},next:{title:"SOAP",permalink:"/docs/docs/Core Development/Triggers/SOAP"}},d={},g=[{value:"REST Trigger",id:"rest-trigger",level:4}];function a(e){const n={blockquote:"blockquote",h4:"h4",p:"p",strong:"strong",...(0,s.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:["Quickintegrate platform supports ",(0,t.jsx)(n.strong,{children:"REST API"})," development using HTTP trigger where configurations can be defined such as host, port, uri/query params etc."]}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"When we Login to Quick Integration Platform to get started."}),"\n"]}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["Click on ",(0,t.jsx)(n.strong,{children:"Manage"})," Option >> ",(0,t.jsx)(n.strong,{children:"Projects"})," >> ",(0,t.jsx)(n.strong,{children:"Create"})," to create the new project"]}),"\n"]}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["Go to ",(0,t.jsx)(n.strong,{children:"DEVELOP"})," >> ",(0,t.jsx)(n.strong,{children:"Functionality"})," API"]}),"\n"]}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"Select relevant project and create services in that project"}),"\n"]}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["Select ",(0,t.jsx)(n.strong,{children:"REST"})," triggers in drowndown while creating the flow"]}),"\n"]}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["Once service name is provided, canvas will show up with selected DB ",(0,t.jsx)(n.strong,{children:"REST"})," Trigger"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"rest-trigger",children:"REST Trigger"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)("img",{src:(0,o.Z)("/img/Core Development/Rest_trigger.png")}),";"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)("img",{src:(0,o.Z)("/img/Core Development/Trigger_config/Rest_config.png")}),";"]}),"\n",(0,t.jsx)(n.p,{children:"In REST configurations uri and type needs to be defined. Query and Uri parameters can be defined with Uri as below:"})]})}function p(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},1151:(e,n,r)=>{r.d(n,{Z:()=>c,a:()=>i});var t=r(7294);const s={},o=t.createContext(s);function i(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);