"use strict";(self.webpackChunkuser_documentation=self.webpackChunkuser_documentation||[]).push([[5151],{534:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>l,toc:()=>d});var i=t(5893),r=t(1151),s=t(4996);const o={sidebar_position:3},a="Model Design",l={id:"Requirement Gathering/Model Desing",title:"Model Design",description:"Develop the virtual model, including database tables and columns, and generate CRUD APIs from it. Alternatively, leverage it as a schema for your integration flow.",source:"@site/docs/Requirement Gathering/Model Desing.md",sourceDirName:"Requirement Gathering",slug:"/Requirement Gathering/Model Desing",permalink:"/docs/Requirement Gathering/Model Desing",draft:!1,unlisted:!1,editUrl:"https://github.com/quickintegrate/docs/tree/main/Requirement Gathering/Model Desing.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Swagger",permalink:"/docs/Requirement Gathering/Swagger"},next:{title:"Schema Design",permalink:"/docs/Requirement Gathering/Schema Design"}},c={},d=[];function g(e){const n={h1:"h1",p:"p",strong:"strong",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"model-design",children:"Model Design"}),"\n",(0,i.jsx)(n.p,{children:"Develop the virtual model, including database tables and columns, and generate CRUD APIs from it. Alternatively, leverage it as a schema for your integration flow."}),"\n",(0,i.jsxs)(n.p,{children:["Go to ",(0,i.jsx)(n.strong,{children:"Define"})," >> ",(0,i.jsx)(n.strong,{children:"Model Design"})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)("img",{src:(0,s.Z)("/img/Define/Define-Model design.png")}),";"]}),"\n",(0,i.jsx)(n.p,{children:"When you navigate to the page, you'll find the Model Design page with Create Entity and Entity Details coloum Where you can Define the Entity"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)("img",{src:(0,s.Z)("/img/Define/model design page.png")}),";"]}),"\n",(0,i.jsx)(n.p,{children:'Click the "add" button to create the entity and enter the required information,and then save.'}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)("img",{src:(0,s.Z)("/img/Define/Create-Entity-order.png")}),";"]}),"\n",(0,i.jsx)(n.p,{children:"After saving the entity, the entity details will be created; then, select Show API"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)("img",{src:(0,s.Z)("/img/Define/Entity-Details.png")}),";"]}),"\n",(0,i.jsx)(n.p,{children:"After you click on Show API, all the services relevant to the API will be created automatically"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)("img",{src:(0,s.Z)("/img/Define/Services in Entity.png")}),";"]}),"\n",(0,i.jsx)(n.p,{children:'After clicking "Create API," services corresponding to the table will be generated. If the services already exist, a text box will appear instead of plain text. This allows you to modify duplicate URLs or service names.'})]})}function h(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(g,{...e})}):g(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>a,a:()=>o});var i=t(7294);const r={},s=i.createContext(r);function o(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);