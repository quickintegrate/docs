"use strict";(self.webpackChunkuser_documentation=self.webpackChunkuser_documentation||[]).push([[9050],{4397:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>p,frontMatter:()=>i,metadata:()=>l,toc:()=>d});var t=o(5893),r=o(1151),s=o(4996);const i={},c=void 0,l={id:"Core Development/Connectors/FILE",title:"FILE",description:"File connector is used to handle Files folders on a local File systems",source:"@site/docs/Core Development/Connectors/FILE.md",sourceDirName:"Core Development/Connectors",slug:"/Core Development/Connectors/FILE",permalink:"/docs/docs/Core Development/Connectors/FILE",draft:!1,unlisted:!1,editUrl:"https://github.com/quickintegrate/docs/tree/main/Core Development/Connectors/FILE.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"DYN Connector",permalink:"/docs/docs/Core Development/Connectors/DYN"},next:{title:"FTP (FTP Connector)",permalink:"/docs/docs/Core Development/Connectors/FTP"}},a={},d=[{value:"File-connector features:",id:"file-connector-features",level:4},{value:"Configuring <strong>File</strong> Connector",id:"configuring-file-connector",level:3}];function u(e){const n={h3:"h3",h4:"h4",p:"p",strong:"strong",...(0,r.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"File"})," connector is used to handle ",(0,t.jsx)(n.strong,{children:"File"}),"s folders on a local ",(0,t.jsx)(n.strong,{children:"File"})," systems"]}),"\n",(0,t.jsx)(n.h4,{id:"file-connector-features",children:"File-connector features:"}),"\n",(0,t.jsx)(n.p,{children:"Ability to read Files\r\nWriting Files to directory\r\nCopy and move Files\r\nLocking File so that no one can access File when the processing is going on\r\nListing the File and folders mentioned at directory path\r\nTrigger a flow when the new File created or modified\r\nOperation available:"}),"\n",(0,t.jsxs)(n.p,{children:["Copy\r\nCreate Directory\r\nDelete\r\nList\r\nMove\r\nOn New or Updated ",(0,t.jsx)(n.strong,{children:"File"}),"\r\nRead\r\nRename\r\nWrite"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)("img",{src:(0,s.Z)("/img/Connectors/FILE_Connector.png")}),";"]}),"\n",(0,t.jsxs)(n.h3,{id:"configuring-file-connector",children:["Configuring ",(0,t.jsx)(n.strong,{children:"File"})," Connector"]}),"\n",(0,t.jsxs)(n.p,{children:["Follow these steps to set up and test a connection to your ",(0,t.jsx)(n.strong,{children:"File"})," by creating a reusable global variable for the ",(0,t.jsx)(n.strong,{children:"File"})," connector to reference."]})]})}function p(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}},1151:(e,n,o)=>{o.d(n,{Z:()=>c,a:()=>i});var t=o(7294);const r={},s=t.createContext(r);function i(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);